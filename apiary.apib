HOST: http://api.i-ready.com/

--- Curriculum Associates Provisioning API v1 ---
---
Welcome to the Curriculum Associates [i-Ready](http://cainc.i-Ready.com/) Provisioning API documentation. Version 1.0 of our REST API for Provisioning is still under construction. Planned interfaces are documented below.

*i-Ready API Documentation version 0.6 - updated 12/3/12*

## Authentication  & Authorization

Each method call will be individually authenticated.
The authentication and authorization will be scoped to a single i-Ready district account.
Within the account the credentials may have further restrictions depending on the role assigned them.

### OAuth 2.0
The production deployment of the APIs will require all requests to include a valid OAuth 2.0 bearer token of authentication.
The i-Ready APIs will implement a 2-legged OAuth implementation for managment of the tokens.

### Basic Authentication
In the i-Ready test environments the APIs will also accept http basic authentication credentials.

---

--
API Pattern - CRUD Operations
All the resources in the i-Ready Provising APIs share a common pattern for accessing them.

The API supports four type of opertions:

> Query, done via an http GET request.

> Create, done via an http POST request.

> Update, done via an http PUT request.

> Delete, done via an http DELETE request.
--
Query requests, http GET, will retrieve information about the resource identified by the URI.  The request body should be empty.  The request response will return data formatted in to two sections:

- status: Contains details about the success or failure of the request.  By default the status block in excluded if the request was successful, though it is shown below.
- data: The json representation of the resources requested; the schema of the data section is dependent on the type of object being accessed.
GET /<resource>
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    },
    "data": { ... }
}

Create requests, http POST, send a block of JSON that describes the new resource to be created.  The JSON must contain all required fields.
All read-only fields will be ignored by the server.

Create requests are always directed at the collection the new resource will be added to.  For example, a new Student will be created via a post to the /API/Students/ collection.

The response will return a status and, if successful, data block.  The data block will return the details of the new resource including its identity.
POST /<resource>
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    },
    "data": {
        ...,
        "id": "<unique-id>",
        "_links": {
            "self": { "href": "/<collection>/<unique-id>"},
            ...
        }
    }
}

Update requests, http PUT, send a block of JSON that describes the new values to be assigned to the resource.  The JSON uses the same schema as that used in the POST method and retrieved with the GET requests.
Read-only fields are ignored when processing the request.

The response to the update will contain a data block with the details of updated resource.
PUT /<resource>
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    },
    "data": { ... }
}

Delete requests, http DELETE, will delete the resource identified by the URI.  The request body should be empty.  The request response will contain a status block.
DELETE /<resource>
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    }
}

--
API Pattern - Hierarchy
All the resources in the i-Ready Provising APIs share a common pattern for accessing them.

> Note: The i-Ready API resources contain references to related resources.  These references should be used traverse between resources.  This section describes the hierarchical pattern used for organizing resources and resource collections.  This hierarchy is used consistantly but manual construction of paths based on this pattern will be prone to error.
--
Top level collections contain all the resources, of a given type within, the account.
All collections accept at least two, optional, parameters:

- limit: (Optional) The max number of items to retrieve.  A system limit of TBD will be imposed on all requests to collections.
- offset: (Optional) The index at which to start retrieving items.

The returned data section contains an array of returned items and properties about what was returned such as the limit and offset specified in the request.
GET /<top-level-collection>?limit=10&offset=20
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    },
    "data": {
        "limit": 10,
        "offset": 20,
        "_links": {
            "self": { "href": "/<top-level-collection>?limit=10&offset=20"}
            "next": { "href": "/<top-level-collection>?limit=10&offset=30"}
            "back": { "href": "/<top-level-collection>?limit=10&offset=10"}
        },
        "items": [
            { ... },
            { ... },
            { ... },
            { ... }
        ]
    }
}

Top level resources, E.g. Students, Classes, Teachers, etc, are identified as items within their corresponding top level collection.
GET /<top-level-collection>/{id}
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    }
}

Relationship collections are identified as resources within a top level resource.  For example all the classes assigned to a particular student will be accessed via a URI of the form:

> /api/students/{id}/classes/.
GET /<top-level-collection>/{id}/<relationship-collection>&limit=20&offset=20
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    },
    "data": {
        "limit": 20,
        "offset": 20,
        "_links": {
            "self": { "href": "/<top-level-collection>/{id}/<relationship-collection>?limit=20&offset=20"}
            "next": { "href": "/<top-level-collection>/{id}/<relationship-collection>?limit=20&offset=40"}
            "back": { "href": "/<top-level-collection>/{id}/<relationship-collection>?limit=20&offset=0"}
        },
        "items": [
            { ... },
            { ... },
            { ... },
            { ... }
        ]
    }
}

Relationship resources define the relationship between two top level resources.
Relationship objects contain references to the two top level resources and, optionally, additional properties used to describe the relationship.
GET /<top-level-collection>/{id}/<relationship-collection>/{relationship-id}
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    },
    "data": {
        ...,
        "_links": {
            "self": { "href": "/<top-level-collection>/{id}/<relationship-collection>/{relationship-id}"}
            "<first-type>": { "href": "/<top-level-collection>/{id}"}
            "<second-type>": { "href": "/<second-top-level-collection>/{id}"}
        }
    }
}

--
Product Resources
The following is a section of resources related to i-Ready Product resources.

The Product resources are all read-only; Only http GET requests are supported.
--
Retrieve all of the products available to the calling i-Ready account. 
GET /products?limit=2
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    },
    "data": {
        "limit": 2,
        "offset": 0,
        "_links": {
            "self": { "href": "/products?limit=2&offset=0"}
            "next": { "href": "/products?limit=2&offset=2"}
        },
        "items": [
            {
               "id": "{first-id}",
               "longName": "i-Ready Diagnostic & Instruction Math",
               "shortName": "D&I Math",
               "productFamily": "Diagnostic & Instruction",
               "subject": "Math",
               "_links":
               {
                   "self": "/products/{first-id}",
                   "classes": "/products/{first-id}/classes"
               }
            },
            {
               "id": "{second-id}",
               "longName": "i-Ready Diagnostic & Instruction ELA",
               "shortName": "D&I ELA",
               "productFamily": "Diagnostic & Instruction",
               "subject": "ELA",
               "_links":
               {
                   "self": "/products/{second-id}",
                   "classes": "/products/{second-id}/classes"
               }
            },
        ]
    }
}

Retrieve the details of a particular product.
GET /products/{id}
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    },
   "data": {
       "id": "{id}",
       "longName": "i-Ready Diagnostic & Instruction Math",
       "shortName": "D&I Math",
       "productFamily": "Diagnostic & Instruction",
       "subject": "Math",
       "_links":
       {
           "self": "/products/{id}",
           "classes": "/products/{id}/classes"
       }
    }
}

--
 Product/Class Resources
The following is a section of resources related to i-Ready Product/Class relationship resources.

The Product/Class resources are all read-only; Only http GET requests are supported.
--
Retrieve the classes assigned to a particular product.
GET /products/{id}/classes?limit=2
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    },
    "data": {
        "limit": 2,
        "offset": 0,
        "_links": {
            "self": { "href": "/products/{id}/classes?limit=2"}
            "next": { "href": "/products/{id}/classes?limit=2&offset=2"}
        },
        "items": [
            {
                "id": "{first-reference-id}",
                "_links": {
                    "self": { "href": "/products/{id}/classes/{first-reference-id}"}
                    "product": { "href": "/products/{id}"}
                    "class": { "href": "/classes/{first-class-id}"}
                }
            },
            {
                "id": "{second-reference-id}",
                "_links": {
                    "self": { "href": "/products/{id}/classes/{second-reference-id}"}
                    "product": { "href": "/products/{id}"}
                    "class": { "href": "/classes/{second-class-id}"}
                }
            }
        ]
    }
}

Retrieve a particular product/class reference.
GET /products/{id}/classes/{reference-id}
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    },
    "data":{
        "id": "{reference-id}",
        "_links": {
            "self": { "href": "/products/{id}/classes/{reference-id}"}
            "product": { "href": "/products/{id}"}
            "class": { "href": "/classes/{class-id}"}
        }
    }
}

--
School Resources
The following is a section of resources related to i-Ready School resources.

The School resources are all read-only; Only http GET requests are supported.
--
Retrieve all of the schools in the i-Ready account. 
GET /schools?limit=2
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    },
    "data": {
        "limit": 2,
        "offset": 0,
        "_links": {
            "self": { "href": "/schools?limit=2&offset=0"}
            "next": { "href": "/schools?limit=2&offset=2"}
        },
        "items": [
            {
                "id": "{first-id}",
                "name": "Harrington Elementary School",
                "districtName": "oh-9-26",
                "state": "OH",
               "_links":
               {
                   "self": "/schools/{first-id}",
                   "classes": "/schools/{first-id}/classes"
                   "students": "/schools/{first-id}/students"
                   "teachers": "/schools/{first-id}/teachers"
               }
            },
            {
                "id": "{second-id}",
                "name": "Lincoln Middle School",
                "districtName": "oh-9-26",
                "state": "OH",
               "_links":
               {
                   "self": "/schools/{second-id}",
                   "students": "/schools/{second-id}/students"
                   "teachers": "/schools/{second-id}/teachers"
               }
            },
        ]
    }
}

Retrieve the details of a particular school.
GET /schools/{id}
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    },
   "data": {
        "id": "{id}",
        "name": "Harrington Elementary School",
        "districtName": "oh-9-26",
		"state": "OH",
	   "_links":
	   {
		   "self": "/schools/{id}",
		   "classes": "/schools/{id}/classes"
		   "students": "/schools/{id}/students"
		   "teachers": "/schools/{id}/teachers"
	   }
    }
}

--
 School/Class Resources
The following is a section of resources related to i-Ready School/Class relationship resources.

The School/Class resources are all read-only; Only http GET requests are supported.
--
Retrieve the classes assigned to a particular school.
GET /schools/{id}/classes?limit=2
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    },
    "data": {
        "limit": 2,
        "offset": 0,
        "_links": {
            "self": { "href": "/schools/{id}/classes?limit=2"}
            "next": { "href": "/schools/{id}/classes?limit=2&offset=2"}
        },
        "items": [
            {
                "id": "{first-reference-id}",
                "_links": {
                    "self": { "href": "/schools/{id}/classes/{first-reference-id}"}
                    "school": { "href": "/schools/{id}"}
                    "class": { "href": "/classes/{first-class-id}"}
                }
            },
            {
                "id": "{second-reference-id}",
                "_links": {
                    "self": { "href": "/schools/{id}/classes/{second-reference-id}"}
                    "school": { "href": "/schools/{id}"}
                    "class": { "href": "/classes/{second-class-id}"}
                }
            }
        ]
    }
}

Retrieve a particular school/class reference.
GET /schools/{id}/classes/{reference-id}
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    },
    "data":{
        "id": "{reference-id}",
        "_links": {
            "self": { "href": "/schools/{id}/classes/{reference-id}"}
            "school": { "href": "/schools/{id}"}
            "class": { "href": "/classes/{class-id}"}
        }
    }
}

--
 School/Student Resources
The following is a section of resources related to i-Ready School/Student relationship resources.

The School/Student resources are all read-only; Only http GET requests are supported.
--
Retrieve the students assigned to a particular school.
GET /schools/{id}/students?limit=2
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    },
    "data": {
        "limit": 2,
        "offset": 0,
        "_links": {
            "self": { "href": "/schools/{id}/students?limit=2"}
            "next": { "href": "/schools/{id}/students?limit=2&offset=2"}
        },
        "items": [
            {
                "id": "{first-reference-id}",
                "_links": {
                    "self": { "href": "/schools/{id}/students/{first-reference-id}"}
                    "school": { "href": "/schools/{id}"}
                    "student": { "href": "/students/{first-class-id}"}
                }
            },
            {
                "id": "{second-reference-id}",
                "_links": {
                    "self": { "href": "/schools/{id}/students/{second-reference-id}"}
                    "school": { "href": "/schools/{id}"}
                    "student": { "href": "/students/{second-class-id}"}
                }
            }
        ]
    }
}

Retrieve a particular school/student reference.
GET /schools/{id}/students/{reference-id}
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    },
    "data":{
        "id": "{reference-id}",
        "_links": {
            "self": { "href": "/schools/{id}/students/{reference-id}"}
            "school": { "href": "/schools/{id}"}
            "student": { "href": "/students/{class-id}"}
        }
    }
}


--
 School/Teacher Resources
The following is a section of resources related to i-Ready School/Teacher relationship resources.

The School/Teacher resources are all read-only; Only http GET requests are supported.
--
Retrieve the teachers assigned to a particular school.
GET /schools/{id}/teachers?limit=2
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    },
    "data": {
        "limit": 2,
        "offset": 0,
        "_links": {
            "self": { "href": "/schools/{id}/teachers?limit=2"}
            "next": { "href": "/schools/{id}/teachers?limit=2&offset=2"}
        },
        "items": [
            {
                "id": "{first-reference-id}",
                "_links": {
                    "self": { "href": "/schools/{id}/teachers/{first-reference-id}"}
                    "school": { "href": "/schools/{id}"}
                    "teacher": { "href": "/teachers/{first-class-id}"}
                }
            },
            {
                "id": "{second-reference-id}",
                "_links": {
                    "self": { "href": "/schools/{id}/teachers/{second-reference-id}"}
                    "school": { "href": "/schools/{id}"}
                    "teacher": { "href": "/teachers/{second-class-id}"}
                }
            }
        ]
    }
}

Retrieve a particular school/teacher reference.
GET /schools/{id}/teachers/{reference-id}
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    },
    "data":{
        "id": "{reference-id}",
        "_links": {
            "self": { "href": "/schools/{id}/teachers/{reference-id}"}
            "school": { "href": "/schools/{id}"}
            "teacher": { "href": "/teachers/{class-id}"}
        }
    }
}

--
Class Resources
The following is a section of resources related to i-Ready Class resources.

Within a district account a class is uniquely identified by the combination of 4 properties; name, grade, school reference and product reference.

The class has an externalId property that can be set by the user.  This value must be unique within the district account or null.
--
Get all of the classes related to an i-Ready account.
GET /classes?limit=2
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    },
    "data": {
        "limit": 2,
        "offset": 0,
        "_links": {
            "self": { "href": "/classes?limit=2&offset=0"}
            "next": { "href": "/classes?limit=2&offset=2"}
        },
        "items": [
            {
               "id": "{first-class-id}",
               "name": "Grade K Class",
               "grade": "0",
               "location": "Room 201",
               "createdDate": "2012-08-17T14:56:43Z",
               "externalId": "CL012345",
               "_links":
               {
                   "school": { "href": "/schools/{first-school-id}" },
                   "product": { "href": "/products/{first-product-id}" },
                   "self": { "href": "/classes/{first-class-id}" },
                   "students": { "href": "/classes/{first-class-id}/students" },
                   "teachers": { "href": "/classes/{first-class-id}/teachers" },
               }
           },
           {
               "id": "{second-class-id}",
               "name": "Hoosiers Grade 2 Class",
               "grade": "2",
               "location": "Room 305",
               "createdDate": "2012-08-17T14:56:43Z",
               "externalId": "CL012337",
               "_links":
               {
                   "school": { "href": "/schools/{second-school-id}" },
                   "product": { "href": "/products/{second-product-id}" },
                   "self": { "href": "/classes/{second-class-id}" },
                   "students": { "href": "/classes/{second-class-id}/students" },
                   "teachers": { "href": "/classes/{second-class-id}/teachers" },
               }
           }
        ]
    }
}

Create a new Class.

When creating a new class the name, grade, school reference and product reference properties are required.

Read-only properties will be ignored.
POST /classes
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
> Content-Type: application/json
{
	"id": null,
	"name": "Eagles - Grade 1",
	"grade": "1",
	"location": "Room 212",
	"createdDate": "null,
	"externalId": "CL012341",
	"_links":
	{
		"school": { "href": "/schools/{school-id}" },
		"product": { "href": "/products/{product-id}" }
		"self": null,
		"students": null,
		"teachers": null,
	}
}
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    },
    "data": {
		"id": "{id}",
		"name": "Eagles - Grade 1",
		"grade": "1",
		"location": "Room 212",
		"createdDate": "2012-11-29T14:56:43Z",
		"externalId": "CL012341",
		"_links":
		{
			"school": { "href": "/schools/{school-id}" },
			"product": { "href": "/products/{product-id}" }
			"self": { "href": "/classes/{id}" },
			"students": { "href": "/classes/{id}/students" },
			"teachers": { "href": "/classes/{id}/teachers" },
		}
    }
}

Get the details of a particular Class.
GET /classes/{id}
< 200
< Content-Type: application/json
{
	"id": "{id}",
	"name": "Hoosiers Grade 2 Class",
	"grade": "2",
	"location": "Room 305",
	"createdDate": "2012-08-17T14:56:43Z",
	"externalId": "CL012337",
	"_links":
	{
		"school": { "href": "/schools/{school-id}" },
		"product": { "href": "/products/{product-id}" },
		"self": { "href": "/classes/{id}" },
		"students": { "href": "/classes/{id}/students" },
		"teachers": { "href": "/classes/{id}/teachers" },
	}
}

Update a particular class resource.

When updating the name, classCode and location values can be changed.  A class's school and product references cannot be modified after it had been created.

Read-only properties will be ignored.
PUT /classes/{id}
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
> Content-Type: application/json
{
	"id": "{id}",
	"name": "Eagles - Grade 1",
	"grade": "1",
	"location": "Room 212",
	"createdDate": "2012-11-29T14:56:43Z",
	"externalId": "CL012341",
	"_links":
	{
		"school": { "href": "/schools/{school-id}" },
		"product": { "href": "/products/{product-id}" }
		"self": { "href": "/classes/{id}" },
		"students": { "href": "/classes/{id}/students" },
		"teachers": { "href": "/classes/{id}/teachers" },
	}
}
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    },
    "data": {
		"id": "{id}",
		"name": "Eagles - Grade 1",
		"grade": "1",
		"location": "Room 212",
		"createdDate": "2012-11-29T14:56:43Z",
		"externalId": "CL012341",
		"_links":
		{
			"school": { "href": "/schools/{school-id}" },
			"product": { "href": "/products/{product-id}" }
			"self": { "href": "/classes/{id}" },
			"students": { "href": "/classes/{id}/students" },
			"teachers": { "href": "/classes/{id}/teachers" },
		}
    }
}

Delete a particular class.
DELETE /classes/{id}
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    }
}

--
 Class/Student Resources
The following is a section of resources related to i-Ready Class/Student relationship resources.
--

Retrieve the students assigned to a particular class.
GET /classes/{id}/students?limit=2
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    },
    "data": {
        "limit": 2,
        "offset": 0,
        "_links": {
            "self": { "href": "/classes/{id}/students?limit=2"}
            "next": { "href": "/classes/{id}/students?limit=2&offset=2"}
        },
        "items": [
            {
                "id": "{first-relationship-id}",
				"createdDate": "2012-12-03T16:02:43Z",
                "_links": {
                    "self": { "href": "/classes/{id}/students/{first-relationship-id}"}
                    "class": { "href": "/classes/{id}"}
                    "student": { "href": "/students/{first-class-id}"}
                }
            },
            {
                "id": "{second-relationship-id}",
				"createdDate": "2012-12-03T16:02:43Z",
                "_links": {
                    "self": { "href": "/classes/{id}/students/{second-relationship-id}"}
                    "class": { "href": "/classes/{id}"}
                    "student": { "href": "/students/{second-class-id}"}
                }
            }
        ]
    }
}

Create a new class/student relationship.
POST /classes/{id}/students
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
> Content-Type: application/json
{
	"id": null,
	"createdDate": null,
	"_links": {
		"self": null
		"class": { "href": "/classes/{id}"}
		"student": { "href": "/students/{class-id}"}
	}
}
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    },
    "data": {
        "id": "{relationship-id}",
		"createdDate": "2012-12-03T16:02:43Z",
        "_links": {
            "self": { "href": "/classes/{id}/students/{relationship-id}"}
			"class": { "href": "/classes/{id}"}
			"student": { "href": "/students/{class-id}"}
		}
    }
}

Retrieve a particular class/student relationship.
GET /classes/{id}/students/{relationship-id}
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    },
    "data":{
        "id": "{relationship-id}",
		"createdDate": "2012-12-03T16:02:43Z",
        "_links": {
            "self": { "href": "/classes/{id}/students/{relationship-id}"}
            "class": { "href": "/classes/{id}"}
            "student": { "href": "/students/{class-id}"}
        }
    }
}

Updating of class/student relationships is not supported.  If a student changes classes the old relationship should be deleted and a new one added.
PUT /classes/{id}/students/{relationship-id}
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 405
< Content-Type: application/json
{
    "status": {
        "httpCode": "405",
        "errorCode": "C10004",
        "userMessage": "Operation not supported.",
        "detailsMessage": "Class/Student relationship resources can not be modified."
    }
}

Delete a particular class/student relationship.
DELETE /classes/{id}/students/{relationship-id}
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    }
}

--
 Class/Teacher Resources
The following is a section of resources related to i-Ready Class/Teacher relationship resources.
--
Retrieve the teachers assigned to a particular class.
GET /classes/{id}/teachers?limit=2
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    },
    "data": {
        "limit": 2,
        "offset": 0,
        "_links": {
            "self": { "href": "/classes/{id}/teachers?limit=2"}
            "next": { "href": "/classes/{id}/teachers?limit=2&offset=2"}
        },
        "items": [
            {
                "id": "{first-relationship-id}",
				"createdDate": "2012-12-03T16:02:43Z",
                "_links": {
                    "self": { "href": "/classes/{id}/teachers/{first-relationship-id}"}
                    "class": { "href": "/classes/{id}"}
                    "teacher": { "href": "/teachers/{first-class-id}"}
                }
            },
            {
                "id": "{second-relationship-id}",
				"createdDate": "2012-12-03T16:02:43Z",
                "_links": {
                    "self": { "href": "/classes/{id}/teachers/{second-relationship-id}"}
                    "class": { "href": "/classes/{id}"}
                    "teacher": { "href": "/teachers/{second-class-id}"}
                }
            }
        ]
    }
}

Create a new class/teacher relationship.
POST /classes/{id}/teachers
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
> Content-Type: application/json
{
	"id": null,
	"createdDate": null,
	"_links": {
		"self": null
		"class": { "href": "/classes/{id}"}
		"teacher": { "href": "/teachers/{class-id}"}
	}
}
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    },
    "data": {
        "id": "{relationship-id}",
		"createdDate": "2012-12-03T16:02:43Z",
        "_links": {
            "self": { "href": "/classes/{id}/teachers/{relationship-id}"}
			"class": { "href": "/classes/{id}"}
			"teacher": { "href": "/teachers/{class-id}"}
		}
    }
}

Retrieve a particular class/teacher relationship.
GET /classes/{id}/teachers/{relationship-id}
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    },
    "data":{
        "id": "{relationship-id}",
		"createdDate": "2012-12-03T16:02:43Z",
        "_links": {
            "self": { "href": "/classes/{id}/teachers/{relationship-id}"}
            "class": { "href": "/classes/{id}"}
            "teacher": { "href": "/teachers/{class-id}"}
        }
    }
}

Updating of class/teacher relationships is not supported.  If a teacher changes classes the old relationship should be deleted and a new one added.
PUT /classes/{id}/teachers/{relationship-id}
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 405
< Content-Type: application/json
{
    "status": {
        "httpCode": "405",
        "errorCode": "C10004",
        "userMessage": "Operation not supported.",
        "detailsMessage": "Class/Teacher relationship resources can not be modified."
    }
}

Delete a particular class/teacher relationship.
DELETE /classes/{id}/teachers/{relationship-id}
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    }
}


--
Student Resources
The following is a section of resources related to i-Ready Student resources.

Students are identified by their userName. The student's userName must by unique to all users within their distict account's state.

Additionally the student's have an externalId that must be set.  The externalId is unique to all students in the district account; for students the externalId cannot be null.
--
Get all of the students related to an i-Ready account.
GET /students?limit=2
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    },
    "data": {
		"limit": 2,
		"offset": 0,
		"_links": {
			"self": { "href": "/students?limit=2&offset=0"}
			"next": { "href": "/students?limit=2&offset=2"}
		},
		"items": [
			{
				"id": "{first-student-id}",
				"firstName": "Rick",
				"lastName": "Campbell",
				"userName": "di-rcampbell@oh",
				"externalId": "e250345c39b7",
				"dateOfBirth": null,
				"grade": "5",
				"mathDevelopmentalLevel": null,
				"elaDevelopmentalLevel": null,
				"englishLanguageLearner": "false",
				"specialEducation": "false",
				"economicallyDisadvantaged": "false",
				"migrant": "false",
				"gender": null,
				"ethnicityId": "05",
				"createdDate": "2012-11-29T14:56:43Z",
				"_links":
				{
				   "school": { "href": "/schools/{first-school-id}" },
				   "self": { "href": "/students/{first-student-id}" },
				   "classes": { "href": "/students/{first-student-id}/classes" }
				}
			},
			{
				"id": "{second-student-id}",
				"firstName": "Hosea",
				"lastName": "Alvarez",
				"userName": "di-halvarez@oh",
				"externalId": "2d7b7295efd3",
				"dateOfBirth": null,
				"grade": "2",
				"mathDevelopmentalLevel": null,
				"elaDevelopmentalLevel": null,
				"englishLanguageLearner": "false",
				"specialEducation": "false",
				"economicallyDisadvantaged": "false",
				"migrant": "false",
				"gender": null,
				"ethnicityId": "01",
				"createdDate": "2012-11-29T14:56:43Z",
				"_links":
				{
				   "school": { "href": "/schools/{second-school-id}" },
				   "self": { "href": "/students/{second-student-id}" },
				   "classes": { "href": "/students/{second-student-id}/classes" }
				}
           }
       ]
	}
}

Create a new Student.

Read-only properties will be ignored.
POST /students
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
> Content-Type: application/json
{
	"id": null,
	"firstName": "Hosea",
	"lastName": "Alvarez",
	"userName": "di-halvarez@oh",
	"externalId": "2d7b7295efd3",
	"dateOfBirth": null,
	"grade": "2",
	"mathDevelopmentalLevel": null,
	"elaDevelopmentalLevel": null,
	"englishLanguageLearner": "false",
	"specialEducation": "false",
	"economicallyDisadvantaged": "false",
	"migrant": "false",
	"gender": null,
	"ethnicityId": "01",
	"createdDate": null,
	"_links":
	{
		"school": { "href": "/schools/{school-id}" },
		"self": null,
		"classes": null
	}
}
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    },
    "data": {
		"id": "{id}",
		"firstName": "Hosea",
		"lastName": "Alvarez",
		"userName": "di-halvarez@oh",
		"externalId": "2d7b7295efd3",
		"dateOfBirth": null,
		"grade": "2",
		"mathDevelopmentalLevel": null,
		"elaDevelopmentalLevel": null,
		"englishLanguageLearner": "false",
		"specialEducation": "false",
		"economicallyDisadvantaged": "false",
		"migrant": "false",
		"gender": null,
		"ethnicityId": "01",
		"createdDate": "2012-11-31T10:32:43Z",
		"_links":
		{
		   "school": { "href": "/schools/{school-id}" },
		   "self": { "href": "/students/{id}" },
		   "classes": { "href": "/students/{id}/classes" }
		}
    }
}

Get the details of a particular Student.
GET /students/{id}
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    },
    "data": {
		"id": "{id}",
		"firstName": "Hosea",
		"lastName": "Alvarez",
		"userName": "di-halvarez@oh",
		"externalId": "2d7b7295efd3",
		"dateOfBirth": null,
		"grade": "2",
		"mathDevelopmentalLevel": null,
		"elaDevelopmentalLevel": null,
		"englishLanguageLearner": "false",
		"specialEducation": "false",
		"economicallyDisadvantaged": "false",
		"migrant": "false",
		"gender": null,
		"ethnicityId": "01",
		"createdDate": "2012-11-29T14:56:43Z",
		"_links":
		{
			"school": { "href": "/schools/{school-id}" },
			"self": { "href": "/students/{id}" },
			"classes": { "href": "/students/{id}/classes" }
		}
    }
}

Update a particular student resource.

Read-only properties will be ignored.
PUT /students/{id}
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
> Content-Type: application/json
{
	"id": "{id}",
	"firstName": "Hosea",
	"lastName": "Alvarez",
	"userName": "di-halvarez@oh",
	"externalId": "2d7b7295efd3",
	"dateOfBirth": null,
	"grade": "2",
	"mathDevelopmentalLevel": null,
	"elaDevelopmentalLevel": null,
	"englishLanguageLearner": "false",
	"specialEducation": "false",
	"economicallyDisadvantaged": "false",
	"migrant": "false",
	"gender": null,
	"ethnicityId": "01",
	"createdDate": "2012-11-29T14:56:43Z",
	"_links":
	{
		"school": { "href": "/schools/{school-id}" },
		"self": { "href": "/students/{id}" },
		"classes": { "href": "/students/{id}/classes" }
	}
}
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    },
    "data": {
		"id": "{id}",
		"firstName": "Hosea",
		"lastName": "Alvarez",
		"userName": "di-halvarez@oh",
		"externalId": "2d7b7295efd3",
		"dateOfBirth": null,
		"grade": "2",
		"mathDevelopmentalLevel": null,
		"elaDevelopmentalLevel": null,
		"englishLanguageLearner": "false",
		"specialEducation": "false",
		"economicallyDisadvantaged": "false",
		"migrant": "false",
		"gender": null,
		"ethnicityId": "01",
		"createdDate": "2012-12-03T16:02:43Z",
		"_links":
		{
			"school": { "href": "/schools/{school-id}" },
			"self": { "href": "/students/{id}" },
			"classes": { "href": "/students/{id}/classes" }
		}
	}
}

Deleting of student resources is not supported.
DELETE /students/{id}
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 405
< Content-Type: application/json
{
    "status": {
        "httpCode": "405",
        "errorCode": "C10004",
		"userMessage": "Operation not supported.",
        "detailsMessage": "Student resources can not be deleted."
	}
}

--
Student/Class Resources
The following is a section of resources related to i-Ready Student/Class relationship resources.

> Note: The relationship resources within the /students/{student-id}/classes collection will typically be stored at the path /classes/{class-id}/students/{relationship-id}.  For accurate consumption of a resource the 'self' link should be utilized to directly access the relationship resource.

> Creation of new relationships can be done via a POST to the students/{student-id}/classes collection however the new relationship item created will have a URI fo the form classes/{class-id}/students/{relationship-id}.
--
Retrieve the classes assigned to a particular student.
GET /students/{id}/classes?limit=2
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    },
    "data": {
        "limit": 2,
        "offset": 0,
        "_links": {
            "self": { "href": "/students/{id}/classes?limit=2"}
            "next": { "href": "/students/{id}/classes?limit=2&offset=2"}
        },
        "items": [
            {
                "id": "{first-relationship-id}",
				"createdDate": "2012-12-03T16:02:43Z",
                "_links": {
                    "self": { "href": "/classes/{first-relationship-id}/students/{id}"}
                    "student": { "href": "/students/{id}"}
                    "class": { "href": "/classes/{first-class-id}"}
                }
            },
            {
                "id": "{second-relationship-id}",
				"createdDate": "2012-12-03T16:02:43Z",
                "_links": {
                    "self": { "href": "classes/{second-relationship-id}/students/{id}/"}
                    "student": { "href": "/students/{id}"}
                    "class": { "href": "/classes/{second-class-id}"}
                }
            }
        ]
    }
}

Creation of new student/class relationship.
POST /students/{id}/classes
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
> Content-Type: application/json
{
	"id": null,
	"_links": {
		"self": null
		"createdDate": null,
		"student": { "href": "/students/{id}"}
		"class": { "href": "/classes/{class-id}"}
	}
}
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    },
    "data": {
        "id": "{relationship-id}",
		"createdDate": "2012-12-03T16:02:43Z",
        "_links": {
            "self": { "href": "/classes/{relationship-id}/students/{id}"}
			"student": { "href": "/students/{id}"}
			"class": { "href": "/classes/{class-id}"}
		}
    }
}

Retrieve a particular student/class relationship.

This is not the proper path to access student/class relationship objects.  See the [Class/Student Resources](http://docs.cainc.apiary.io/#classstudent resources) section for the proper path to use. 
GET /students/{id}/classes/{relationship-id}
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 404
< Content-Type: application/json
{
    "status": {
        "httpCode": "404",
        "errorCode": "C10003",
        "userMessage": "The requested resource was not found.",
        "detailsMessage": "No resources are available at this URI."
    }
}

Updating of student/class relationships is not supported.  If a student changes classes the old relationship should be deleted and a new one added.

This is not the proper path to access student/class relationship objects.  See the [Class/Student Resources](http://docs.cainc.apiary.io/#classstudent resources) section for the proper path to use.
PUT /students/{id}/classes/{relationship-id}
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 404
< Content-Type: application/json
{
    "status": {
        "httpCode": "404",
        "errorCode": "C10003",
        "userMessage": "The requested resource was not found.",
        "detailsMessage": "No resources are available at this URI."
    }
}

Delete a particular student/class relationship.

This is not the proper path to access student/class relationship objects.  See the [Class/Student Resources](http://docs.cainc.apiary.io/#classstudent resources) section for the proper path to use.
DELETE /students/{id}/classes/{relationship-id}
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 404
< Content-Type: application/json
{
	"status": {
		"httpCode": "404",
		"errorCode": "C10003",
		"userMessage": "The requested resource was not found.",
		"detailsMessage": "No resources are available at this URI."
	}
}


--
Teacher Resources
The following is a section of resources related to i-Ready Teacher resources.

Teachers are identified by their userName. The teacher's userName must by unique to all users within their distict account's state.
--
Get all of the teachers related to an i-Ready account.
GET /teachers?limit=2
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    },
    "data": {
		"limit": 2,
		"offset": 0,
        "_links": {
            "self": { "href": "/teachers?limit=2&offset=0"}
            "next": { "href": "/teachers?limit=2&offset=2"}
        },
		"items": [
			{
				"id": "{first-teacher-id}",
				"firstName": "Janet",
				"lastName": "Benjamin",
				"userName": "DI-JBenjamin",
				"externalId": null,
				"emailAddress": null,
				"createdDate": "2012-11-29T14:56:43Z",
				"_links":
				{
				   "school": { "href": "/schools/{first-school-id}" },
				   "self": { "href": "/teachers/{first-teacher-id}" },
				   "classes": { "href": "/teachers/{first-teacher-id}/classes" }
				}
			},
			{
				"id": "{first-teacher-id}",
				"firstName": "Michael",
				"lastName": "Williams",
				"userName": "DI-MWilliams",
				"externalId": null,
				"emailAddress": null,
				"createdDate": "2012-11-29T14:56:43Z",
				"_links":
				{
				   "school": { "href": "/schools/{second-school-id}" },
				   "self": { "href": "/teachers/{second-teacher-id}" },
				   "classes": { "href": "/teachers/{second-teacher-id}/classes" }
				}
			}
       ]
	}
}

Create a new Teacher.

Read-only properties will be ignored.
POST /teachers
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
> Content-Type: application/json
{
	"id": null,
	"firstName": "Janet",
	"lastName": "Benjamin",
	"userName": "DI-JBenjamin",
	"externalId": null,
	"emailAddress": null,
	"createdDate": null,
	"_links":
	{
	   "school": { "href": "/schools/{school-id}" },
	   "self": null,
	   "classes": null
	}
}
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    },
    "data": {
		"id": "{id}",
		"firstName": "Janet",
		"lastName": "Benjamin",
		"userName": "DI-JBenjamin",
		"externalId": null,
		"emailAddress": null,
		"createdDate": "2012-11-29T14:56:43Z",
		"_links":
		{
		   "school": { "href": "/schools/{school-id}" },
		   "self": { "href": "/teachers/{id}" },
		   "classes": { "href": "/teachers/{id}/classes" }
		}
	}
}

Get the details of a particular Teacher.
GET /teachers/{id}
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    },
    "data": {
		"id": "{id}",
		"firstName": "Janet",
		"lastName": "Benjamin",
		"userName": "DI-JBenjamin",
		"externalId": null,
		"emailAddress": null,
		"createdDate": "2012-11-29T14:56:43Z",
		"_links":
		{
		   "school": { "href": "/schools/{school-id}" },
		   "self": { "href": "/teachers/{id}" },
		   "classes": { "href": "/teachers/{id}/classes" }
		}
    }
}

Update a particular teacher resource.

Read-only properties will be ignored.
PUT /teachers/{id}
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
> Content-Type: application/json
{
	"id": "{id}",
	"firstName": "Janet",
	"lastName": "Benjamin",
	"userName": "DI-JBenjamin",
	"externalId": null,
	"emailAddress": null,
	"createdDate": "2012-11-29T14:56:43Z",
	"_links":
	{
	   "school": { "href": "/schools/{school-id}" },
	   "self": { "href": "/teachers/{id}" },
	   "classes": { "href": "/teachers/{id}/classes" }
	}
}
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    },
    "data": {
		"id": "{id}",
		"firstName": "Janet",
		"lastName": "Benjamin",
		"userName": "DI-JBenjamin",
		"externalId": null,
		"emailAddress": null,
		"createdDate": "2012-11-29T14:56:43Z",
		"_links":
		{
		   "school": { "href": "/schools/{school-id}" },
		   "self": { "href": "/teachers/{id}" },
		   "classes": { "href": "/teachers/{id}/classes" }
		}
	}
}

Deleting of teacher resources is not supported.
DELETE /teachers/{id}
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 405
< Content-Type: application/json
{
    "status": {
        "httpCode": "405",
        "errorCode": "C10004",
		"userMessage": "Operation not supported.",
        "detailsMessage": "Teacher resources can not be deleted."
	}
}

--
Teacher/Class Resources
The following is a section of resources related to i-Ready Teacher/Class relationship resources.

> Note: The relationship resources within the /teachers/{teacher-id}/classes collection will typically be stored at the path /classes/{class-id}/teachers/{relationship-id}.  For accurate consumption of a resource the 'self' link should be utilized to directly access the relationship resource.

> Creation of new relationships can be done via a POST to the teachers/{teacher-id}/classes collection however the new relationship item created will have a URI fo the form classes/{class-id}/teachers/{relationship-id}.
--
Retrieve the classes assigned to a particular teacher.
GET /teachers/{id}/classes?limit=2
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    },
    "data": {
        "limit": 2,
        "offset": 0,
        "_links": {
            "self": { "href": "/teachers/{id}/classes?limit=2"}
            "next": { "href": "/teachers/{id}/classes?limit=2&offset=2"}
        },
        "items": [
            {
                "id": "{first-relationship-id}",
				"createdDate": "2012-12-03T16:02:43Z",
                "_links": {
                    "self": { "href": "/classes/{first-relationship-id}/teachers/{id}"}
                    "teacher": { "href": "/teachers/{id}"}
                    "class": { "href": "/classes/{first-class-id}"}
                }
            },
            {
                "id": "{second-relationship-id}",
				"createdDate": "2012-12-03T16:02:43Z",
                "_links": {
                    "self": { "href": "classes/{second-relationship-id}/teachers/{id}/"}
                    "teacher": { "href": "/teachers/{id}"}
                    "class": { "href": "/classes/{second-class-id}"}
                }
            }
        ]
    }
}

Creation of new teacher/class relationship.
POST /teachers/{id}/classes
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
> Content-Type: application/json
{
	"id": null,
	"_links": {
		"self": null
		"createdDate": null,
		"teacher": { "href": "/teachers/{id}"}
		"class": { "href": "/classes/{class-id}"}
	}
}
< 200
< Content-Type: application/json
{
    "status": {
        "httpCode": "200",
        "errorCode": "C00000",
        "userMessage": "Success",
        "detailsMessage": "Success"
    },
    "data": {
        "id": "{relationship-id}",
		"createdDate": "2012-12-03T16:02:43Z",
        "_links": {
            "self": { "href": "/classes/{relationship-id}/teachers/{id}"}
			"teacher": { "href": "/teachers/{id}"}
			"class": { "href": "/classes/{class-id}"}
		}
    }
}

This is not the proper path to access teacher/class relationship objects.  To retrieve teacher/class relationship see the [Class/Teacher Resources](http://docs.cainc.apiary.io/#classteacher resources) section for the proper path to use. 
GET /teachers/{id}/classes/{relationship-id}
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 404
< Content-Type: application/json
{
    "status": {
        "httpCode": "404",
        "errorCode": "C10003",
        "userMessage": "The requested resource was not found.",
        "detailsMessage": "No resources are available at this URI."
    }
}

Updating of teacher/class relationships is not supported.  If a teacher changes classes the old relationship should be deleted and a new one added.

This is not the proper path to access teacher/class relationship objects.  See the [Class/Teacher Resources](http://docs.cainc.apiary.io/#classteacher resources) section for the proper path to use.
PUT /teachers/{id}/classes/{relationship-id}
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 404
< Content-Type: application/json
{
    "status": {
        "httpCode": "404",
        "errorCode": "C10003",
        "userMessage": "The requested resource was not found.",
        "detailsMessage": "No resources are available at this URI."
    }
}

This is not the proper path to access teacher/class relationship objects.  To delete teacher/class relationship see the [Class/Teacher Resources](http://docs.cainc.apiary.io/#classteacher resources) section for the proper path to use.
DELETE /teachers/{id}/classes/{relationship-id}
> Authorization: Basic REktQWRtaW4yOnBhc3N3b3JkMg==
< 404
< Content-Type: application/json
{
	"status": {
		"httpCode": "404",
		"errorCode": "C10003",
		"userMessage": "The requested resource was not found.",
		"detailsMessage": "No resources are available at this URI."
	}
}
